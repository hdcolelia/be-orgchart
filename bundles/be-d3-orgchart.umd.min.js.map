{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://be-d3-orgchart/lib/components/@items/basic/item-basic.ts","ng://be-d3-orgchart/lib/clasess/d3-org-chart.class.ts","ng://be-d3-orgchart/lib/components/orgchart/be-d3-orgchart.component.html","ng://be-d3-orgchart/lib/components/orgchart/be-d3-orgchart.component.ts","ng://be-d3-orgchart/lib/be-d3-orgchart.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NodeItemParser","this","width","height","prototype","prepareDefs","prSVG","defs","append","drawNodes","prGroup","prNodes","data","d","id","attr","updateNodes","select","D3OrgChart","prContainer","prOptions","_this","options","backgroundColor","nodeParser","defaultFont","_data","currentZoom","_nodeSize","onNodeClick","Subject","me","container","d3.select","_a","_nodeParser","_b","Object","assign","fromEvent","window","pipe","debounceTime","subscribe","render","defineProperty","parser","prSize","prepareCanvas","length","prepareData","showNodes","containerRect","node","getBoundingClientRect","svg","selectAll","join","enter","d3.zoom","on","zoomed","style","update","chart","centerG","root","d3.stratify","nodeId","parentId","parentNodeId","treemap","d3.tree","size","nodeSize","allNodes","descendants","treeData","nodes","filter","current","parent","expanded","nodeStartPosition","x","y","expand","exit","transition","duration","remove","pathStartingDiagonal","target","diagonal","slice","insert","lastTransform","d3.event","transform","_onNodeClick","s","t","ex","ey","xrvs","yrvs","rInitial","Math","abs","h","children","forEach","hidden","i0.ɵɵnamespaceSVG","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵtext","BED3OrgchartComponent","prEl","_chart","nativeElement","ngAfterViewInit","init","ngOnChanges","changes","currentValue","assignNodeParser","assignData","console","log","clear","Array","arguments","concat","__spread","prParser","core","ElementRef","selectors","inputs","features","decls","vars","consts","template","rf","ctx","i0.ɵɵtemplate","BED3OrgchartModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as d3 from 'd3';\r\nimport { ID3Node } from '../../../interfaces';\r\n\r\nexport class NodeItemParser {\r\n  constructor() { }\r\n\r\n  // dimensions\r\n  width: number = 240;\r\n  height: number = 150;\r\n\r\n  defs: d3.Selection<SVGDefsElement, any, any, any>\r\n\r\n  prepareDefs(prSVG: d3.Selection<SVGElement, any, any, any>) {\r\n    const me = this;\r\n    me.defs = prSVG.append('defs');\r\n  }\r\n\r\n  drawNodes(prGroup: d3.Selection<SVGGElement, any, any, any>, prNodes: d3.HierarchyPointNode<ID3Node>[]) {\r\n    const me = this;\r\n\r\n    prGroup.data(prNodes, (d: d3.HierarchyPointNode<ID3Node>) => d.id)\r\n      .append('rect')\r\n      .attr('class', 'node-rect')\r\n      .attr('width', me.width)\r\n      .attr('height', me.height)\r\n      .attr('stroke', 'blue')\r\n      .attr('stroke-width', 2)\r\n      .attr('fill', 'gray');\r\n  }\r\n\r\n  updateNodes(prGroup: d3.Selection<SVGGElement, any, any, any>, prNodes: d3.HierarchyPointNode<ID3Node>[]) {\r\n    prGroup.select('rect.node-rect').attr('fill', 'black')\r\n    //  .each(d => {\r\n    //    console.log('argument: ', d);\r\n    //  })\r\n\r\n    //.data(prNodes).select('rect.node-rect')\r\n    //.attr('x', d => d.x)\r\n    //.attr('y', d => d.y);\r\n    // console.log('Updateing...:', prGroup)\r\n  }\r\n\r\n}","//#region \r\n// Desarrollado en base a: \r\n//  https://bl.ocks.org/bumbeishvili/09a03b81ae788d2d14f750afe59eb7de\r\n//  https://github.com/bumbeishvili/d3-organization-chart\r\n//#endregion\r\n\r\nimport * as d3 from 'd3';\r\nimport { ID3Node } from '../interfaces';\r\nimport { Subject, fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { NodeItemParser } from './../components/@items/basic/item-basic';\r\n\r\nexport interface ID3OrgChartOptions {\r\n  nodeParser?: NodeItemParser;\r\n  data?: ID3Node[];\r\n  backgroundColor?: string;\r\n  defaultFont?: string;\r\n}\r\n\r\nexport interface ISize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport class D3OrgChart {\r\n  //#region Default Options\r\n  protected options: ID3OrgChartOptions = {\r\n    backgroundColor: '#03A3C5',\r\n    nodeParser: new NodeItemParser(),\r\n    data: [],\r\n    defaultFont: 'Tahoma'\r\n  }\r\n  //#endregion\r\n\r\n  //#region SVG compoennts\r\n  protected container: d3.Selection<HTMLElement, any, any, any>;\r\n  protected svg: d3.Selection<any, any, any, any>;\r\n  protected chart: d3.Selection<any, any, any, any>;\r\n  protected centerG: d3.Selection<any, any, any, any>;\r\n\r\n  protected defs: any;\r\n  protected lastTransform: any;\r\n  //#endregion\r\n\r\n  //#region DATA\r\n  protected root: d3.HierarchyPointNode<ID3Node>;\r\n  protected allNodes: any;\r\n\r\n  protected _data: ID3Node[] = [];\r\n  get data(): ID3Node[] {\r\n    return this._data || [];\r\n  }\r\n\r\n  set data(data: ID3Node[]) {\r\n    this._data = data;\r\n    // this.render()\r\n  }\r\n  //#endregion\r\n\r\n  //#region  NODE PARSER\r\n  protected _nodeParser: NodeItemParser;\r\n  get nodeParser(): NodeItemParser {\r\n    return this._nodeParser;\r\n  }\r\n  set nodeParser(parser: NodeItemParser) {\r\n    this._nodeParser = parser;\r\n    // this.render();\r\n  }\r\n  //#endregion\r\n\r\n  currentZoom: number = 1;\r\n\r\n  protected _nodeSize: ISize = {\r\n    width: 250,\r\n    height: 200\r\n  };\r\n\r\n  get nodeSize() {\r\n    return this._nodeSize;\r\n  }\r\n\r\n  set nodeSize(prSize: ISize) {\r\n    this._nodeSize = prSize;\r\n  }\r\n\r\n  treemap: d3.TreeLayout<ID3Node>;\r\n\r\n  constructor(prContainer: HTMLElement, prOptions?: ID3OrgChartOptions) {\r\n    const me = this;\r\n\r\n    // init container\r\n    me.container = d3.select(prContainer);\r\n\r\n    //If Data argument passed - then set it\r\n    if (prOptions?.data) me._data = prOptions.data;\r\n\r\n    // setting parser\r\n    me._nodeParser = prOptions?.nodeParser || me.options.nodeParser;\r\n\r\n    // applying options\r\n    me.options = Object.assign(me.options, prOptions);\r\n\r\n    // monitor resize\r\n    fromEvent(window, 'resize')\r\n      .pipe(\r\n        debounceTime(300)\r\n      ).subscribe(\r\n        () => {\r\n          // HDC - VER this.prepareCanvas();\r\n          this.render();\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const me = this;\r\n    // preparing svg\r\n    me.prepareCanvas();\r\n\r\n    // if no data then return\r\n    if (!me.data.length) return;\r\n\r\n    // preparing data\r\n    me.prepareData();\r\n\r\n    // showing nodes\r\n    me.showNodes();\r\n    return this;\r\n  }\r\n\r\n  // preparing canvas\r\n  protected prepareCanvas() {\r\n    const me = this;\r\n\r\n    //Drawing containers\r\n    const containerRect = me.container.node().getBoundingClientRect();\r\n    me.svg = me.container.selectAll('svg')\r\n      .data([{ id: 'svg' }], (d: { id: string }) => d.id)\r\n      .join(\r\n        enter => enter\r\n          .append('svg')\r\n          .attr('class', 'svg-chart-container')\r\n          .attr('font-family', me.options.defaultFont)\r\n          .call(d3.zoom().on(\"zoom\", d => this.zoomed()))\r\n          .attr('cursor', 'move')\r\n          .style('background-color', me.options.backgroundColor),\r\n        update =>\r\n          update\r\n            .attr('width', containerRect.width)\r\n            .attr('height', containerRect.height)\r\n      );\r\n    //Add container g element\r\n    me.chart = me.svg.selectAll('g.chart')\r\n      .data([{ id: 'chart' }], (d: { id: string }) => d.id)\r\n      .join(\r\n        enter => enter\r\n          .append('g')\r\n          .attr('class', 'chart')\r\n          .attr('transform', `translate(0,0)`),\r\n        update => update\r\n      )\r\n\r\n    // Add one more container g element, for better positioning controls\r\n    me.centerG = me.chart.selectAll('g.center-group')\r\n      .data([{ id: 'center-group' }], (d: { id: string }) => d.id)\r\n      .join(\r\n        enter => enter.append('g')\r\n          .attr('class', 'center-group'),\r\n        update =>\r\n          update\r\n            .attr('transform', `translate(${containerRect.width / 2},${this._nodeSize.height}) scale(${this.currentZoom})`)\r\n      )\r\n  }\r\n\r\n  // preparing data\r\n  protected prepareData() {\r\n    const me = this;\r\n\r\n    // if no data return \r\n    if (!me.data.length) return;\r\n\r\n    // Convert flat data to hierarchical\r\n    me.root = d3.stratify<ID3Node>()\r\n      .id(({ nodeId }) => nodeId)\r\n      .parentId(({ parentNodeId }) => parentNodeId)\r\n      (me.data) as d3.HierarchyPointNode<ID3Node>;\r\n\r\n\r\n    // preparing treemap\r\n    const containerRect = me.container.node().getBoundingClientRect();\r\n    me.treemap = d3.tree<ID3Node>().size([containerRect.width || 250, containerRect.height])\r\n      .nodeSize([this._nodeSize.width + 100, this._nodeSize.height + 100]);\r\n\r\n    me.allNodes = me.treemap(me.root).descendants();\r\n  }\r\n\r\n  // showing nodes\r\n  protected showNodes() {\r\n    const me = this;\r\n    //  Assigns the x and y position for the nodes\r\n    const treeData = me.treemap(me.root);\r\n\r\n    // select nodes from center group\r\n\r\n    // it is necesary for scope \r\n    const drawNodes = (container, nodes) => me.nodeParser.drawNodes(container, nodes);\r\n\r\n    const nodes = treeData.descendants()\r\n      .filter(current =>\r\n        !current.parent\r\n        || current.parent.data.expanded\r\n      );\r\n\r\n    // rendering nodes\r\n    const nodeStartPosition = (d: d3.HierarchyPointNode<ID3Node>) => {\r\n      if (!d.parent) return `translate(${d.x - (me.nodeParser.width / 2)},${d.y})`;\r\n      return `translate(${d.parent.x - (me.nodeParser.width / 2)},${d.parent.y})`\r\n    }\r\n\r\n    const nodePosition = (d: d3.HierarchyPointNode<ID3Node>) =>\r\n      `translate(${d.x - (me.nodeParser.width / 2)},${d.y})`;\r\n\r\n    me.centerG.selectAll('g.node')\r\n      .data(nodes, (d: d3.HierarchyPointNode<ID3Node>) => d.data.nodeId)\r\n      .join(\r\n        enter =>\r\n          enter\r\n            .append('g')\r\n            .attr('class', 'node')\r\n            .attr('transform', nodeStartPosition)\r\n            .call(drawNodes, nodes)\r\n            .on('click', (node) => {\r\n\r\n              me.expand(node);\r\n\r\n              me.onNodeClick.next({ id: node.data.nodeId, node: node.data });\r\n            }),\r\n        update => update,\r\n        exit =>\r\n          exit\r\n            .transition()\r\n            .duration(600)\r\n            .attr('transform', nodeStartPosition)\r\n            .style(\"opacity\", 0)\r\n            .remove()\r\n      )\r\n      .transition().duration(600)\r\n      .attr('transform', nodePosition);\r\n\r\n    // rendering links\r\n\r\n    const pathStartingDiagonal = (d: d3.HierarchyPointNode<ID3Node>) => {\r\n      const target = { x: d.parent.x, y: d.parent.y + me.nodeParser.height };\r\n      return this.diagonal(target, target)\r\n    }\r\n\r\n    const pathDiagonal = (d: d3.HierarchyPointNode<ID3Node>) => {\r\n      const target = { x: d.parent.x, y: d.parent.y + me.nodeParser.height };\r\n      return this.diagonal(d, target)\r\n    }\r\n\r\n    me.centerG.selectAll('path.link')\r\n      .data(nodes.slice(1), (d: d3.HierarchyPointNode<ID3Node>) => d.data.nodeId)\r\n      .join(\r\n        enter =>\r\n          enter\r\n            .insert('path', 'g')\r\n            .attr('class', 'link')\r\n            .attr('fill', 'none')\r\n            .attr('stroke', 'blue')\r\n            .attr('stroke-width', 2)\r\n            .attr('d', pathStartingDiagonal),\r\n        update => update,\r\n        exit =>\r\n          exit\r\n            .transition().duration(600)\r\n            .attr('d', pathStartingDiagonal)\r\n            .remove()\r\n      )\r\n      .transition().duration(600)\r\n      .attr('d', pathDiagonal);\r\n  }\r\n\r\n  // Zoom handler function\r\n  zoomed() {\r\n    const me = this;\r\n    // Saving d3 event's transform object\r\n    me.lastTransform = d3.event.transform;\r\n    // Reposition and rescale chart accordingly\r\n    me.chart.attr('transform', me.lastTransform);\r\n  }\r\n  //#region Events\r\n  // node click\r\n  onNodeClick: Subject<{ id: string, node: ID3Node }> = new Subject();\r\n  protected _onNodeClick(nodeId: string, node: ID3Node) {\r\n    this.onNodeClick.next({ id: nodeId, node: node });\r\n  }\r\n  //#endregion\r\n\r\n  //drawNode(prNode: d3.HierarchyPointNode<ID3Node>) {\r\n  //  const me = this;\r\n  //  me.nodeParser.draw(me.centerG, prNode);\r\n  //}\r\n\r\n\r\n  // Generate custom diagonal - play with it here - https://observablehq.com/@bumbeishvili/curved-edges?collection=@bumbeishvili/work-components\r\n  diagonal(s, t) {\r\n\r\n    // Calculate some variables based on source and target (s,t) coordinates\r\n    const x = s.x;\r\n    const y = s.y;\r\n    const ex = t.x;\r\n    const ey = t.y;\r\n    let xrvs = ex - x < 0 ? -1 : 1;\r\n    let yrvs = ey - y < 0 ? -1 : 1;\r\n    let rdef = 35;\r\n    let rInitial = Math.abs(ex - x) / 2 < rdef ? Math.abs(ex - x) / 2 : rdef;\r\n    let r = Math.abs(ey - y) / 2 < rInitial ? Math.abs(ey - y) / 2 : rInitial;\r\n    let h = Math.abs(ey - y) / 2 - r;\r\n    let w = Math.abs(ex - x) - r * 2;\r\n\r\n    // Build the path\r\n    const path = `\r\n            M ${x} ${y}\r\n            L ${x} ${y + h * yrvs}\r\n            C  ${x} ${y + h * yrvs + r * yrvs} ${x} ${y + h * yrvs + r * yrvs} ${x + r * xrvs} ${y + h * yrvs + r * yrvs}\r\n            L ${x + w * xrvs + r * xrvs} ${y + h * yrvs + r * yrvs}\r\n            C ${ex}  ${y + h * yrvs + r * yrvs} ${ex}  ${y + h * yrvs + r * yrvs} ${ex} ${ey - h * yrvs}\r\n            L ${ex} ${ey}\r\n          `\r\n    // Return result\r\n    return path;\r\n  }\r\n\r\n  expand(node: d3.HierarchyPointNode<ID3Node>) {\r\n    const me = this;\r\n    const expanded = node.data.expanded;\r\n    node.data.expanded = !expanded;\r\n\r\n    const expand = (children: d3.HierarchyPointNode<ID3Node>[], expanded: boolean) => {\r\n      (children || [])\r\n        .forEach(current => {\r\n          current.data.hidden = !expanded;\r\n          expand(current.children, expanded);\r\n        });\r\n    }\r\n\r\n    expand(node.children, expanded);\r\n    me.render();\r\n  }\r\n\r\n}\r\n","<div #orgchart class=\"container\"></div>\r\n\r\n<ng-template #defaultTemplate>\r\n  <svg height=\"400\" width=\"450\">\r\n    <path id=\"lineAB\" d=\"M 100 350 l 150 -300\" stroke=\"red\" stroke-width=\"3\" fill=\"none\" />\r\n      <path id=\"lineBC\" d=\"M 250 50 l 150 300\" stroke=\"red\" stroke-width=\"3\" fill=\"none\" />\r\n      <path d=\"M 175 200 l 150 0\" stroke=\"green\" stroke-width=\"3\" fill=\"none\" />\r\n      <path d=\"M 100 350 q 150 -300 300 0\" stroke=\"blue\" stroke-width=\"5\" fill=\"none\" />\r\n      <!-- Mark relevant points -->\r\n      <g stroke=\"black\" stroke-width=\"3\" fill=\"black\"> \r\n        <circle id=\"pointA\" cx=\"100\" cy=\"350\" r=\"3\" />\r\n        <circle id=\"pointB\" cx=\"250\" cy=\"50\" r=\"3\" />\r\n        <circle id=\"pointC\" cx=\"400\" cy=\"350\" r=\"3\" />\r\n      </g>\r\n      <!-- Label the points -->\r\n      <g font-size=\"30\" font-family=\"sans-serif\" fill=\"black\" stroke=\"none\" text-anchor=\"middle\">\r\n        <text x=\"100\" y=\"350\" dx=\"-30\">A</text>\r\n        <text x=\"250\" y=\"50\" dy=\"-10\">B</text>\r\n        <text x=\"400\" y=\"350\" dx=\"30\">C</text>\r\n      </g>\r\n    </svg>\r\n</ng-template>\r\n\r\n<ng-template #nodeTemplate>\r\n  <div>\r\n    <p>$$title</p>\r\n    <p>$$id</p>\r\n  </div>\r\n</ng-template> ","import { Component, ElementRef, OnInit, ViewChildren, TemplateRef, QueryList, AfterViewInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { D3OrgChart, ID3OrgChartOptions } from '../../clasess/d3-org-chart.class';\r\nimport { ID3Node } from '../../interfaces';\r\nimport * as d3 from 'd3';\r\nimport { NodeItemParser } from '../@items/basic/item-basic';\r\n\r\n@Component({\r\n    selector: 'be-d3-orgchart',\r\n    templateUrl: './be-d3-orgchart.component.html',\r\n    styleUrls: ['./be-d3-orgchart.component.scss']\r\n})\r\nexport class BED3OrgchartComponent implements AfterViewInit, OnChanges {\r\n    @Input() nodes: ID3Node[];\r\n    @Input() nodeParser: NodeItemParser;\r\n\r\n    //#region Chart\r\n    protected _chart: D3OrgChart;\r\n    get chart(): D3OrgChart {\r\n        const me = this;\r\n        if (!me._chart) {\r\n            const options: ID3OrgChartOptions = {};\r\n            // adding nodes if defined\r\n            if (me.nodes) options.data = me.nodes;\r\n            // adding node parser if defined\r\n            if (me.nodeParser) options.nodeParser = me.nodeParser;\r\n\r\n            me._chart = new D3OrgChart(this.prEl.nativeElement, options);\r\n        };\r\n        return me._chart;\r\n    }\r\n    //#endregion\r\n\r\n    constructor(protected prEl: ElementRef) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.init()\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const me = this;\r\n\r\n        // detecting changes of input\r\n        if (changes.nodeParser && changes.nodeParser.currentValue) {\r\n            me.assignNodeParser(changes.nodeParser.currentValue);\r\n            me.chart.render();\r\n        }\r\n\r\n        if (changes.nodes && changes.nodes.currentValue) {\r\n            me.assignData(changes.nodes.currentValue as ID3Node[]);\r\n            me.chart.render();\r\n        }\r\n\r\n    }\r\n\r\n    init() {\r\n        const me = this;\r\n        // init the canvas\r\n        const chart = me.chart; // Must be like this to ensure chart init\r\n        me.chart.render();\r\n        // setting data\r\n        me.chart.onNodeClick.subscribe(\r\n            (data: { id: string, node: ID3Node }) => {\r\n                console.log('Clicked: ', data)\r\n            }\r\n        )\r\n    }\r\n\r\n    assignData(data: ID3Node[] | ID3Node, clear: boolean = true) {\r\n        const me = this;\r\n        const chart = me.chart; // Must be like this to ensure chart init\r\n        // if isn´t array we convert it in array\r\n        if (!(data instanceof Array)) data = [data];\r\n        if (clear) {\r\n            chart.data = data;\r\n            return;\r\n        }\r\n        // pushing data\r\n        chart.data = [...chart.data, ...data];\r\n        chart.render();\r\n    }\r\n\r\n    assignNodeParser(prParser: NodeItemParser) {\r\n        const me = this;\r\n        const chart = me.chart; // Must be like this to ensure chart init\r\n        chart.nodeParser = prParser;\r\n        chart.render();\r\n    }\r\n\r\n\r\n    //#region Para Eliminar\r\n    // xxxinit() {\r\n    //     const me = this;\r\n    //     // Obtenemos la info\r\n    //     d3\r\n    //         .json('https://gist.githubusercontent.com/bumbeishvili/dc0d47bc95ef359fdc75b63cd65edaf2/raw/c33a3a1ef4ba927e3e92b81600c8c6ada345c64b/orgChart.json')\r\n    //         .then((data: ID3Node[]) => {\r\n\r\n    //             // data.forEach(current => { current.expanded = true; })\r\n    //             console.log('Adding data: ')\r\n    //             me.chart = new D3OrgChart(this.prEl.nativeElement, data);\r\n    //             me.chart.render();\r\n\r\n    //             me.chart.onNodeClick.subscribe(\r\n    //                 (data: { id: string, node: ID3Node }) => {\r\n    //                     console.log('Clicked: ', data)\r\n    //                 }\r\n    //             )\r\n    //         });\r\n\r\n    //     // me.chart = new D3OrgChart(this.prEl.nativeElement);\r\n    //     // me.chart.render();\r\n\r\n    //     // me.chart.onNodeClick.subscribe(\r\n    //     //     (data: { id: string, node: ID3Node }) => {\r\n    //     //         console.log('Clicked: ', data)\r\n    //     //     }\r\n    //     // )\r\n    // }\r\n    //#endregion\r\n\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BED3OrgchartComponent } from './components/orgchart/be-d3-orgchart.component';\r\n\r\n@NgModule({\r\n  declarations: [BED3OrgchartComponent],\r\n  imports: [\r\n  ],\r\n  exports: [BED3OrgchartComponent]\r\n})\r\nexport class BED3OrgchartModule { } \r\n"]}